<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
>
    <CroppedBitmap x:Key="ToggleButton.0"          Source="Toggle.png" SourceRect="0,0,22,20"/>
    <CroppedBitmap x:Key="ToggleButton.1"          Source="Toggle.png" SourceRect="0,20,22,20"/>
    <CroppedBitmap x:Key="ToggleButton.2"          Source="Toggle.png" SourceRect="0,40,22,20"/>

    <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
        <Border BorderThickness="1" BorderBrush="#333" CornerRadius="4">
            <Border.Background>
                <RadialGradientBrush Center="0.5,0.5" RadiusX="0.7" RadiusY="0.8" GradientOrigin="0.5,0.5">
                    <RadialGradientBrush.GradientStops>
                        <GradientStop Offset="0" Color="#22000000" />
                        <GradientStop Offset="1" Color="#77000000" />
                    </RadialGradientBrush.GradientStops>
                </RadialGradientBrush>
            </Border.Background>
            <Border Name="icon" HorizontalAlignment="Right" VerticalAlignment="Top" Background="#00000000" CornerRadius="0,4,4,0">
                <Image
                    HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,0,0,0"
				    x:Name="imageToogle"
				    Source="{StaticResource ToggleButton.0}"
				    Width="22"
				    Height="20"/>
            </Border>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="icon" Value="#A00889FF"/>
                <Setter Property="Source" TargetName="imageToogle" Value="{StaticResource ToggleButton.1}" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Background" TargetName="icon" Value="#A00047BD"/>
                <Setter Property="Source" TargetName="imageToogle" Value="{StaticResource ToggleButton.1}" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="Background" TargetName="icon" Value="#00000000"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate TargetType="TextBox" x:Key="ComboBoxTextBoxTemplate">
        <Border
				Name="PART_ContentHost"
				Background="AliceBlue"
				Focusable="False" />
    </ControlTemplate>

    <Style
		TargetType="{x:Type ComboBoxItem}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontSize" Value="11.5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="g_st" Background="Transparent" CornerRadius="2">
                        <TextBlock Name="content"
                                   Foreground="#FFFFFFFF"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Top"
                                   Margin="4,3,0,0"
                                   FontWeight="{TemplateBinding FontWeight}"
                                   TextAlignment="Left" Width="{TemplateBinding Width}"
                                   Text="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"	Value="True">
                            <Setter Property="Background" TargetName="g_st" Value="#FF535353" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" TargetName="content" Value="#FFD5AF5E" />
                            <Setter Property="Background" TargetName="g_st" Value="#FF434343" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="#FFFFFF" />
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Border CornerRadius="4">
                    <Grid>
                        <ToggleButton ClickMode="Press"
							              Foreground="Aqua"
							              IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
							              Focusable="False"
							              Template="{StaticResource ComboBoxToggleButtonTemplate}" />
                        <ContentPresenter
								Margin="5,1,23,3"
								HorizontalAlignment="Left"
								Name="ContentSite"
								VerticalAlignment="Center"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
								ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
								Content="{TemplateBinding ComboBox.SelectionBoxItem}"
								IsHitTestVisible="False" />
                        <TextBox
								Margin="3,3,23,3"
								Visibility="Hidden"
								HorizontalAlignment="Left"
								Name="PART_EditableTextBox"
								Background="Transparent"
								VerticalAlignment="Center"
								Style="{x:Null}"
								IsReadOnly="False"
								Focusable="True"
								xml:space="preserve"
								Template="{StaticResource ComboBoxTextBoxTemplate}"/>
							<Popup Name="PART_Popup"
							       Placement="Bottom"
							       Focusable="False"
							       AllowsTransparency="True"
							       IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
							       PopupAnimation="None">
								<Grid 
                                      Name="DropDown"
                                      SnapsToDevicePixels="True"                
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border Name="DropDownBorder" BorderThickness="1,1,1,1" Background="#EE313131" BorderBrush="#59FFFFFF" CornerRadius="0,0,4,4" />
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>                                        
                            </Grid>
							</Popup>
						</Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="Black"/>
                        </Trigger>
                        <Trigger Property="ItemsControl.IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                        <Trigger Property="Window.AllowsTransparency" SourceName="PART_Popup" Value="True">
                            <Setter Property="FrameworkElement.Margin" TargetName="DropDownBorder" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="ComboBox.IsEditable" Value="True">
                            <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                            <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                            <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>